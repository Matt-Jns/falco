apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "falco.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "falco.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "falco.fullname" .}}
      role: security
  template:
    metadata:
      name: {{ template "falco.fullname" .}}
      labels:
        app: {{ template "falco.fullname" .}}
        role: security
    spec:
      serviceAccountName: {{ template "falco.serviceAccountName" .}}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "falco.image" . }}
          imagePullPolicy: IfNotPresent
          args:
            - /usr/bin/falco
            - --cri
            - /run/containerd/containerd.sock
            - --cri
            - /run/crio/crio.sock
            - -K
            - /var/run/secrets/kubernetes.io/serviceaccount/token
            - -k
            - "https://$(KUBERNETES_SERVICE_HOST)"
            - --k8s-node
            - "$(FALCO_K8S_NODE_NAME)"
            - -pk
          env:
            - name: FALCO_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FALCO_BPF_PROBE
              value: ""
          {{- if .Values.falco.webserver.enabled }}
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: {{ .Values.falco.webserver.k8sHealthzEndpoint }}
              port: {{ .Values.falco.webserver.listenPort }}
              {{- if .Values.falco.webserver.sslEnabled }}
              scheme: HTTPS
              {{- end }}
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: {{ .Values.falco.webserver.k8sHealthzEndpoint }}
              port: {{ .Values.falco.webserver.listenPort }}
              {{- if .Values.falco.webserver.sslEnabled }}
              scheme: HTTPS
              {{- end }}
          {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /host/var/run/docker.sock
              name: docker-socket
            - mountPath: /host/run/containerd/containerd.sock
              name: containerd-socket
            - mountPath: /host/run/crio/crio.sock
              name: crio-socket
            - mountPath: /host/dev
              name: dev-fs
              readOnly: true
            - mountPath: /host/proc
              name: proc-fs
              readOnly: true
            - mountPath: /host/boot
              name: boot-fs
              readOnly: true
            - mountPath: /host/lib/modules
              name: lib-modules
            - mountPath: /host/usr
              name: usr-fs
              readOnly: true
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
            - mountPath: /etc/falco
              name: config-volume
            {{- if or .Values.falco.webserver.sslEnabled }}
            - mountPath: /etc/falco/certs
              name: certs-volume
              readOnly: true
            {{- end }}
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: crio-socket
          hostPath:
            path: /run/crio/crio.sock
        - name: dev-fs
          hostPath:
            path: /dev
        - name: proc-fs
          hostPath:
            path: /proc
        - name: boot-fs
          hostPath:
            path: /boot
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-fs
          hostPath:
            path: /usr
        - name: etc-fs
          hostPath:
            path: /etc
        - name: config-volume
          configMap:
            name: {{ template "falco.fullname" . }}
            items:
              - key: falco.yaml
                path: falco.yaml
              - key: falco_rules.yaml
                path: falco_rules.yaml
              - key: falco_rules.local.yaml
                path: falco_rules.local.yaml
              - key: application_rules.yaml
                path: rules.available/application_rules.yaml
              - key: aws_cloudtrail_rules.yaml
                path: aws_cloudtrail_rules.yaml
        {{- if or .Values.falco.webserver.sslEnabled }}
        - name: certs-volume
          secret:
            {{- if .Values.certs.existingSecret }}
            secretName: {{ .Values.certs.existingSecret }}
            {{- else }}
            secretName: {{ template "falco.fullname" . }}-certs
            {{- end }}
        {{- end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1